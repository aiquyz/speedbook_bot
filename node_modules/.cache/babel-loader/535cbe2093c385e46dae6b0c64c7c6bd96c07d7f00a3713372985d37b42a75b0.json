{"ast":null,"code":"var _jsxFileName = \"/Users/myroshnychenkovladislav/Desktop/speedbookJS/speedbookReact/speedbook/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport './App.css';\n\n// Указываем путь к воркеру pdfjs\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = new URL('pdfjs-dist/build/pdf.worker.min.mjs', import.meta.url).toString();\nfunction App() {\n  _s();\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [file, setFile] = useState(null); // Для хранения загруженного PDF\n\n  // Функция обработки загрузки документа\n  function onDocumentLoadSuccess(pdf) {\n    setNumPages(pdf.numPages); // Устанавливаем количество страниц из pdf объекта\n    extractTextFromPDF(pdf); // Извлекаем текст\n  }\n\n  // Извлечение текста из PDF\n  const extractTextFromPDF = async pdf => {\n    let fullText = '';\n    for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      const pageText = textContent.items.map(item => item.str).join(' ');\n      fullText += pageText + '\\n';\n    }\n    console.log(fullText); // Выводим полный текст документа в консоль\n  };\n\n  // Функция для загрузки PDF файла\n  function onFileChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      setFile(URL.createObjectURL(file)); // Создаем URL для загруженного файла\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Document, {\n          file: file,\n          onLoadSuccess: onDocumentLoadSuccess,\n          children: /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: pageNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Page \", pageNumber, \" of \", numPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pageNumber <= 1,\n          onClick: () => setPageNumber(pageNumber - 1),\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: pageNumber >= numPages,\n          onClick: () => setPageNumber(pageNumber + 1),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KM8m/JkKJuMfvWpELnYH/2pf704=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","URL","import","meta","url","toString","App","_s","numPages","setNumPages","pageNumber","setPageNumber","file","setFile","onDocumentLoadSuccess","pdf","extractTextFromPDF","fullText","pageNum","page","getPage","textContent","getTextContent","pageText","items","map","item","str","join","console","log","onFileChange","event","target","files","createObjectURL","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onLoadSuccess","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/myroshnychenkovladislav/Desktop/speedbookJS/speedbookReact/speedbook/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport './App.css';\n\n// Указываем путь к воркеру pdfjs\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\n  'pdfjs-dist/build/pdf.worker.min.mjs',\n  import.meta.url,\n).toString();\n\nfunction App() {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [file, setFile] = useState(null); // Для хранения загруженного PDF\n\n  // Функция обработки загрузки документа\n  function onDocumentLoadSuccess(pdf) {\n    setNumPages(pdf.numPages); // Устанавливаем количество страниц из pdf объекта\n    extractTextFromPDF(pdf); // Извлекаем текст\n  }\n\n  // Извлечение текста из PDF\n  const extractTextFromPDF = async (pdf) => {\n    let fullText = '';\n    for (let pageNum = 1; pageNum <= pdf.numPages; pageNum++) {\n      const page = await pdf.getPage(pageNum);\n      const textContent = await page.getTextContent();\n      const pageText = textContent.items.map((item) => item.str).join(' ');\n      fullText += pageText + '\\n';\n    }\n    console.log(fullText); // Выводим полный текст документа в консоль\n  };\n\n  // Функция для загрузки PDF файла\n  function onFileChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      setFile(URL.createObjectURL(file)); // Создаем URL для загруженного файла\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <input type=\"file\" accept=\"application/pdf\" onChange={onFileChange} />\n        {file && (\n          <>\n            <Document\n              file={file}\n              onLoadSuccess={onDocumentLoadSuccess}\n            >\n              <Page pageNumber={pageNumber} />\n            </Document>\n            <p>\n              Page {pageNumber} of {numPages}\n            </p>\n            <button\n              disabled={pageNumber <= 1}\n              onClick={() => setPageNumber(pageNumber - 1)}\n            >\n              Previous\n            </button>\n            <button\n              disabled={pageNumber >= numPages}\n              onClick={() => setPageNumber(pageNumber + 1)}\n            >\n              Next\n            </button>\n          </>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}