{"ast":null,"code":"var _jsxFileName = \"/Users/myroshnychenkovladislav/Desktop/speedbookJS/speedbookReact/speedbook/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport pdfToText from 'react-pdftotext';\nimport './App.css';\n\n// Указываем путь к воркеру pdfjs\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = new URL('pdfjs-dist/build/pdf.worker.min.mjs', import.meta.url).toString();\nfunction App() {\n  _s();\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber] = useState(1); // Мы будем извлекать текст только с 1 страницы\n  const [file, setFile] = useState(null); // Для хранения загруженного PDF\n\n  // Функция обработки загрузки документа\n  function onDocumentLoadSuccess({\n    numPages\n  }) {\n    setNumPages(numPages); // Устанавливаем количество страниц из pdf объекта\n  }\n\n  // Функция для загрузки PDF файла\n  function onFileChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      setFile(URL.createObjectURL(file)); // Создаем URL для загруженного файла\n\n      // Извлечение текста с первой страницы загруженного PDF\n      extractTextFromPage(file, 1); // Извлекаем текст с 1 страницы\n    }\n  }\n\n  // Извлечение текста с определенной страницы PDF с помощью react-pdftotext\n  function extractTextFromPage(file, pageNumber) {\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const arrayBuffer = e.target.result;\n      const blob = new Blob([new Uint8Array(arrayBuffer)], {\n        type: 'application/pdf'\n      });\n      pdfToText(blob, {\n        pages: [pageNumber]\n      }) // Указываем, что нужна только первая страница\n      .then(text => {\n        console.log(`Extracted text from page ${pageNumber}: `, text);\n      }).catch(error => {\n        console.error(`Error extracting text from page ${pageNumber}: `, error);\n      });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Document, {\n          file: file,\n          onLoadSuccess: onDocumentLoadSuccess,\n          children: /*#__PURE__*/_jsxDEV(Page, {\n            pageNumber: pageNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Page \", pageNumber, \" of \", numPages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ltmte6Nm51M/7TTDyR1/dfBgDZA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Document","Page","pdfjs","pdfToText","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalWorkerOptions","workerSrc","URL","import","meta","url","toString","App","_s","numPages","setNumPages","pageNumber","file","setFile","onDocumentLoadSuccess","onFileChange","event","target","files","createObjectURL","extractTextFromPage","reader","FileReader","onload","e","arrayBuffer","result","blob","Blob","Uint8Array","type","pages","then","text","console","log","catch","error","readAsArrayBuffer","className","children","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onLoadSuccess","_c","$RefreshReg$"],"sources":["/Users/myroshnychenkovladislav/Desktop/speedbookJS/speedbookReact/speedbook/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport pdfToText from 'react-pdftotext';\nimport './App.css';\n\n// Указываем путь к воркеру pdfjs\npdfjs.GlobalWorkerOptions.workerSrc = new URL(\n  'pdfjs-dist/build/pdf.worker.min.mjs',\n  import.meta.url,\n).toString();\n\nfunction App() {\n  const [numPages, setNumPages] = useState(null);\n  const [pageNumber] = useState(1); // Мы будем извлекать текст только с 1 страницы\n  const [file, setFile] = useState(null); // Для хранения загруженного PDF\n\n  // Функция обработки загрузки документа\n  function onDocumentLoadSuccess({ numPages }) {\n    setNumPages(numPages); // Устанавливаем количество страниц из pdf объекта\n  }\n\n  // Функция для загрузки PDF файла\n  function onFileChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      setFile(URL.createObjectURL(file)); // Создаем URL для загруженного файла\n\n      // Извлечение текста с первой страницы загруженного PDF\n      extractTextFromPage(file, 1); // Извлекаем текст с 1 страницы\n    }\n  }\n\n  // Извлечение текста с определенной страницы PDF с помощью react-pdftotext\n  function extractTextFromPage(file, pageNumber) {\n    const reader = new FileReader();\n    reader.onload = function (e) {\n      const arrayBuffer = e.target.result;\n      const blob = new Blob([new Uint8Array(arrayBuffer)], { type: 'application/pdf' });\n\n      pdfToText(blob, { pages: [pageNumber] }) // Указываем, что нужна только первая страница\n        .then((text) => {\n          console.log(`Extracted text from page ${pageNumber}: `, text);\n        })\n        .catch((error) => {\n          console.error(`Error extracting text from page ${pageNumber}: `, error);\n        });\n    };\n    reader.readAsArrayBuffer(file);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <input type=\"file\" accept=\"application/pdf\" onChange={onFileChange} />\n        {file && (\n          <>\n            {/* Отображение PDF с помощью react-pdf */}\n            <Document\n              file={file}\n              onLoadSuccess={onDocumentLoadSuccess}\n            >\n              <Page pageNumber={pageNumber} />\n            </Document>\n            <p>\n              Page {pageNumber} of {numPages}\n            </p>\n          </>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}