{"ast":null,"code":"import { useRef, useEffect, useContext } from 'react';\nimport { KonstaContext } from './KonstaContext.js';\nimport { TouchRipple } from '../../../shared/esm/touch-ripple-class.js';\nexport const useTouchRipple = (elRef, needsTouchRipple, eventsElRef) => {\n  const context = useContext(KonstaContext);\n  if (!eventsElRef) eventsElRef = elRef;\n  const ripple = useRef(null);\n  const removeRipple = () => {\n    if (ripple.current) ripple.current.remove();\n    ripple.current = null;\n  };\n  const onPointerDown = e => {\n    ripple.current = new TouchRipple(elRef.current, e.pageX, e.pageY);\n  };\n  const onPointerMove = () => {\n    removeRipple();\n  };\n  const onPointerUp = () => {\n    removeRipple();\n  };\n  const attachEvents = () => {\n    if (!context.touchRipple) return;\n    const el = eventsElRef.current;\n    el.addEventListener('pointerdown', onPointerDown);\n    el.addEventListener('pointermove', onPointerMove);\n    el.addEventListener('pointerup', onPointerUp);\n    el.addEventListener('pointercancel', onPointerUp);\n    el.addEventListener('contextmenu', onPointerUp);\n  };\n  const detachEvents = () => {\n    const el = eventsElRef.current;\n    el.removeEventListener('pointerdown', onPointerDown);\n    el.removeEventListener('pointermove', onPointerMove);\n    el.removeEventListener('pointerup', onPointerUp);\n    el.removeEventListener('pointercancel', onPointerUp);\n    el.removeEventListener('contextmenu', onPointerUp);\n  };\n  const onMounted = () => {\n    if (!eventsElRef || !eventsElRef.current || !needsTouchRipple) return;\n    attachEvents();\n  };\n  const onDestroy = () => {\n    if (!eventsElRef || !eventsElRef.current || !needsTouchRipple) return;\n    detachEvents();\n  };\n  useEffect(() => {\n    onMounted();\n    return () => onDestroy();\n  });\n};","map":{"version":3,"names":["useRef","useEffect","useContext","KonstaContext","TouchRipple","useTouchRipple","elRef","needsTouchRipple","eventsElRef","context","ripple","removeRipple","current","remove","onPointerDown","e","pageX","pageY","onPointerMove","onPointerUp","attachEvents","touchRipple","el","addEventListener","detachEvents","removeEventListener","onMounted","onDestroy"],"sources":["/Users/myroshnychenkovladislav/Desktop/speedbookJS/speedbookReact/speedbook/node_modules/konsta/react/esm/shared/use-touch-ripple.js"],"sourcesContent":["import { useRef, useEffect, useContext } from 'react';\nimport { KonstaContext } from './KonstaContext.js';\nimport { TouchRipple } from '../../../shared/esm/touch-ripple-class.js';\nexport const useTouchRipple = (elRef, needsTouchRipple, eventsElRef) => {\n  const context = useContext(KonstaContext);\n  if (!eventsElRef) eventsElRef = elRef;\n  const ripple = useRef(null);\n  const removeRipple = () => {\n    if (ripple.current) ripple.current.remove();\n    ripple.current = null;\n  };\n  const onPointerDown = e => {\n    ripple.current = new TouchRipple(elRef.current, e.pageX, e.pageY);\n  };\n  const onPointerMove = () => {\n    removeRipple();\n  };\n  const onPointerUp = () => {\n    removeRipple();\n  };\n  const attachEvents = () => {\n    if (!context.touchRipple) return;\n    const el = eventsElRef.current;\n    el.addEventListener('pointerdown', onPointerDown);\n    el.addEventListener('pointermove', onPointerMove);\n    el.addEventListener('pointerup', onPointerUp);\n    el.addEventListener('pointercancel', onPointerUp);\n    el.addEventListener('contextmenu', onPointerUp);\n  };\n  const detachEvents = () => {\n    const el = eventsElRef.current;\n    el.removeEventListener('pointerdown', onPointerDown);\n    el.removeEventListener('pointermove', onPointerMove);\n    el.removeEventListener('pointerup', onPointerUp);\n    el.removeEventListener('pointercancel', onPointerUp);\n    el.removeEventListener('contextmenu', onPointerUp);\n  };\n  const onMounted = () => {\n    if (!eventsElRef || !eventsElRef.current || !needsTouchRipple) return;\n    attachEvents();\n  };\n  const onDestroy = () => {\n    if (!eventsElRef || !eventsElRef.current || !needsTouchRipple) return;\n    detachEvents();\n  };\n  useEffect(() => {\n    onMounted();\n    return () => onDestroy();\n  });\n};"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACrD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,WAAW,QAAQ,2CAA2C;AACvE,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,EAAEC,gBAAgB,EAAEC,WAAW,KAAK;EACtE,MAAMC,OAAO,GAAGP,UAAU,CAACC,aAAa,CAAC;EACzC,IAAI,CAACK,WAAW,EAAEA,WAAW,GAAGF,KAAK;EACrC,MAAMI,MAAM,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAID,MAAM,CAACE,OAAO,EAAEF,MAAM,CAACE,OAAO,CAACC,MAAM,CAAC,CAAC;IAC3CH,MAAM,CAACE,OAAO,GAAG,IAAI;EACvB,CAAC;EACD,MAAME,aAAa,GAAGC,CAAC,IAAI;IACzBL,MAAM,CAACE,OAAO,GAAG,IAAIR,WAAW,CAACE,KAAK,CAACM,OAAO,EAAEG,CAAC,CAACC,KAAK,EAAED,CAAC,CAACE,KAAK,CAAC;EACnE,CAAC;EACD,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BP,YAAY,CAAC,CAAC;EAChB,CAAC;EACD,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxBR,YAAY,CAAC,CAAC;EAChB,CAAC;EACD,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAACX,OAAO,CAACY,WAAW,EAAE;IAC1B,MAAMC,EAAE,GAAGd,WAAW,CAACI,OAAO;IAC9BU,EAAE,CAACC,gBAAgB,CAAC,aAAa,EAAET,aAAa,CAAC;IACjDQ,EAAE,CAACC,gBAAgB,CAAC,aAAa,EAAEL,aAAa,CAAC;IACjDI,EAAE,CAACC,gBAAgB,CAAC,WAAW,EAAEJ,WAAW,CAAC;IAC7CG,EAAE,CAACC,gBAAgB,CAAC,eAAe,EAAEJ,WAAW,CAAC;IACjDG,EAAE,CAACC,gBAAgB,CAAC,aAAa,EAAEJ,WAAW,CAAC;EACjD,CAAC;EACD,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMF,EAAE,GAAGd,WAAW,CAACI,OAAO;IAC9BU,EAAE,CAACG,mBAAmB,CAAC,aAAa,EAAEX,aAAa,CAAC;IACpDQ,EAAE,CAACG,mBAAmB,CAAC,aAAa,EAAEP,aAAa,CAAC;IACpDI,EAAE,CAACG,mBAAmB,CAAC,WAAW,EAAEN,WAAW,CAAC;IAChDG,EAAE,CAACG,mBAAmB,CAAC,eAAe,EAAEN,WAAW,CAAC;IACpDG,EAAE,CAACG,mBAAmB,CAAC,aAAa,EAAEN,WAAW,CAAC;EACpD,CAAC;EACD,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAAClB,WAAW,IAAI,CAACA,WAAW,CAACI,OAAO,IAAI,CAACL,gBAAgB,EAAE;IAC/Da,YAAY,CAAC,CAAC;EAChB,CAAC;EACD,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACnB,WAAW,IAAI,CAACA,WAAW,CAACI,OAAO,IAAI,CAACL,gBAAgB,EAAE;IAC/DiB,YAAY,CAAC,CAAC;EAChB,CAAC;EACDvB,SAAS,CAAC,MAAM;IACdyB,SAAS,CAAC,CAAC;IACX,OAAO,MAAMC,SAAS,CAAC,CAAC;EAC1B,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}